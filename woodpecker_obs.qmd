---
title: "Woodpecker Observations"
---

Woodpecker observation data collected thus far. Data is arranged by plot, species, and month.

```{r}
#| echo: false
#| include: false
#| message: false

#####    load packages and functions    #####

{
  library(dplyr)
  library(ggplot2)
  library(cowplot)
  library(plot3D)
  library("plot3Drgl")
  library(knitr)
  library(tidyr)

}

funk <- function(x){length(unique(x))}

```
```{r}
#| echo: false
#| include: false
#| message: false

#####    load data    #####
#
# load each raw data file
parent_form <- read.csv("C:\\Users\\rmeyer\\Documents\\niche_quarto\\WoodpeckerNiche.github.io\\docs\\data\\raw\\form-1__woodpecker-obs.csv")
child_form <- read.csv("C:\\Users\\rmeyer\\Documents\\niche_quarto\\WoodpeckerNiche.github.io\\docs\\data\\raw\\form-2__behaviors.csv")
# merge them into one dataframe

df <- merge(x=parent_form,y=child_form,by.x="ec5_uuid",by.y="ec5_parent_uuid")

# remove columns no longer needed
{
  df$created_at.x <- NULL
  df$created_at.y <- NULL
  df$uploaded_at.x <- NULL
  df$uploaded_at.y <- NULL
  df$title.x <- NULL
  df$title.y <- NULL
  df$ec5_uuid.y <- NULL
  df$ec5_uuid <- NULL
  #provide a unique ref number
  df$obs_id <- 1:nrow(df)
}

# remove any observation that is not a foraging observation

df <- df|>
  filter(X9_Foraging_type !="Other (includes not foraging)")
df$X6_date <- as.Date(df$X6_date, format = "%m/%d/%Y")
df$month <- as.numeric(format(df$X6_date, "%m"))
df$X3_Plot_number <- as.numeric(df$X3_Plot_number)
```

```{r}
#| echo: false
#| message: false
#| include: false

# Summarize the data by month, species, and plot
summary_table <- df %>%
  group_by(month, X8_Species, X3_Plot_number) %>%
  summarise(count = n(), .groups = 'drop')

# Pivot the data into a wide format: each plot is a column, and each species is a row
pivoted_data <- summary_table %>%
  pivot_wider(names_from = X3_Plot_number, values_from = count, values_fill = list(count = 0))


# Columns we expect to have (1:32)
expected_columns <- as.character(1:32)

# Get the columns that are currently in the dataframe
current_columns <- colnames(pivoted_data)

# Identify the missing columns
missing_columns <- setdiff(expected_columns, current_columns)

# Add missing columns with all values set to 0
for (col in missing_columns) {
  pivoted_data[[col]] <- 0
}
ordered_columns <- c("month", "X8_Species", sort(as.numeric( grep("^\\d+$", names(pivoted_data), value = TRUE))))  # Sort plot columns numerically
pivoted_data <- pivoted_data %>% select(all_of(ordered_columns))
colnames(pivoted_data) <- c("month","Species",1:32)

```

# March Observations

```{r}
#| echo: false
#| message: false

tab <- subset(pivoted_data,pivoted_data$month==3)
tab$month <- NULL
# Check columns with sum equal to 0
zero_sum_columns <- colnames(tab[, -1])[colSums(tab[, -1]) == 0]  # Exclude non-numeric columns

# Print column names that have a sum of 0
if (length(zero_sum_columns) > 0) {
  cat(paste("Plot(s) with no observations include: ", paste(zero_sum_columns, collapse = ", ")))
} else {
  cat("Each plot has at least 1 observation of a woodpecker this month.")
}
```

```{r}
#| echo: false
#| message: false
print(kable(tab, caption = paste("April observations by species and plot")))
```

# April Observations

```{r}
#| echo: false
#| message: false

tab <- subset(pivoted_data,pivoted_data$month==4)
tab$month <- NULL
# Check columns with sum equal to 0
zero_sum_columns <- colnames(tab[, -1])[colSums(tab[, -1]) == 0]  # Exclude non-numeric columns

# Print column names that have a sum of 0
if (length(zero_sum_columns) > 0) {
  cat(paste("Plot(s) with no observations include: ", paste(zero_sum_columns, collapse = ", ")))
} else {
  cat("Each plot has at least 1 observation of a woodpecker this month.")
}
```

```{r}
#| echo: false
#| message: false
print(kable(tab, caption = paste("May observations by species and plot")))
```